---
import NavigationButtons from "@/components/Content/NavigationButtons.astro";
import Prose from "@/components/Content/Prose.astro";
import { getGuidesEntries } from "@/components/Sidebar/entries.ts";
import SidebarPage from "@/layouts/SidebarPage.astro";
import type { Locale } from "@/util/i18n";
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
    const entries = (await getCollection("guides")).filter((entry) => entry.data.language === "es");

    const entriesByLocale = entries.flatMap((entry) => {
        return {
            props: {
                entry,
            },
            params: {
                slug: entry.data.url ?? entry.id.split("/")[2],
            },
        };
    });

    return entriesByLocale.filter(Boolean);
}

const previousAndNextPage = async (entry: CollectionEntry<"guides">) => {
    const entries = (await getGuidesEntries(Astro.currentLocale as Locale)).flatMap((s) => s.linkList);
    const currentIndex = entries.findIndex((e) => e.id === entry.id);
    const previous = currentIndex === 0 ? null : entries[currentIndex - 1];
    const next = currentIndex === entries.length - 1 ? null : entries[currentIndex + 1];
    return {
        previous: previous ? { url: previous.url!, title: previous.title } : null,
        next: next ? { url: next.url!, title: next.title } : null,
    };
};

const { entry } = Astro.props;
const { previous, next } = await previousAndNextPage(entry);
const { Content, headings } = await render(entry);
---

<SidebarPage
    meta={{
        title: "KAPLAY Guides, " + entry.data.title,
        description: entry.data.description,
        image: entry.data.image?.src,
        keywords: "kaplayjs, guides, documentation",
    }}
    sidebarMode="guides"
    headings={headings}
    noAd={entry.data.ads ?? false}
>
    <Prose>
        <Content />
        <NavigationButtons previous={previous} next={next} />
    </Prose>
</SidebarPage>
