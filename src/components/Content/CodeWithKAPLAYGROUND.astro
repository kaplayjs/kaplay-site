---
import { Code } from "astro:components";
import kaplaySubmodulePackageJson from "../../../kaplay/package.json";
import { assets } from "@kaplayjs/crew";
import pako from "pako";
import prettier from "prettier/standalone";
import prettierPluginBabel from "prettier/plugins/babel";
import prettierPluginEstree from "prettier/plugins/estree";
import { transformerNotationDiff, transformerNotationHighlight, transformerNotationWordHighlight } from "@shikijs/transformers";

export function compressCode(str: string) {
    return btoa(String.fromCharCode.apply(null, Array.from(pako.deflate(str))));
}

interface Props {
    code: string;
    pgCode?: string;
}

const { code, pgCode } = Astro.props;

const formattedCode = await prettier.format(code, {
    parser: "babel",
    plugins: [prettierPluginBabel, prettierPluginEstree],
    tabWidth: 4,
});

let shareCode = formattedCode;

if (pgCode) {
    const pgFormattedCode = await prettier.format(pgCode, {
        parser: "babel",
        plugins: [prettierPluginBabel, prettierPluginEstree],
        tabWidth: 4,
    });

    shareCode = pgFormattedCode;
}

const compressedCode = compressCode(shareCode);
const kaplaygroundUrl = `https://play.kaplayjs.com/?code=${encodeURIComponent(compressedCode)}&version=master`;
---

<div class="flex flex-col gap-1.5 flex-1 bg-base-200 p-1.5 rounded-box min-h-0">
    <div class="flex items-center justify-between h-10">
        <div class="flex items-center gap-1.5 px-3.5 pt-0.5">
            <div class="size-2.5 bg-base-content/15 rounded-full"></div>
            <div class="size-2.5 bg-base-content/15 rounded-full"></div>
            <div class="size-2.5 bg-base-content/15 rounded-full"></div>
        </div>
        <div class="flex h-full gap-1.5 not-prose">
            <div
                class="flex h-full tooltip tooltip-bottom before:text-xs before:py-1.5 before:left-auto before:right-0 before:translate-x-0 before:mt-0.5 after:mt-0.5"
                data-tip="Copy code"
                data-code={formattedCode}
            >
                <button
                    class="swap btn btn-xs bg-base-100 h-full rounded-xl aspect-square"
                    onclick="
                        navigator.clipboard.writeText(this.parentElement.getAttribute('data-code'));
                        this.classList.add('swap-active');
                        setTimeout(() => this.classList.remove('swap-active'), 500);
                    "
                    aria-label="Copy link to clipboard"
                >
                    <span class="swap-off flex items-center justify-center h-[inherit] aspect-square" aria-hidden="true">
                        <img class="opacity-75 [.btn:hover_&]:opacity-100 transition-opacity" src="/copy.png" width="22" height="22" aria-hidden="true" />
                    </span>

                    <span class="swap-on flex items-center justify-center h-[inherit] aspect-square" aria-hidden="true">
                        <img src="/copied.png" width="22" height="22" aria-hidden="true" />
                    </span>
                </button>
            </div>
            <div
                class="flex h-full tooltip tooltip-bottom before:text-xs before:py-1.5 before:left-auto before:right-0 before:translate-x-0 before:mt-0.5 after:mt-0.5"
                data-tip="Open in KAPLAYGROUND"
            >
                <a class="btn btn-xs bg-base-100 h-full rounded-xl aspect-square" target="_blank" href={kaplaygroundUrl}>
                    <img src={assets.play.outlined} class="w-5 h-5 object-scale-down ml-0.5" />
                </a>
            </div>
        </div>
    </div>

    <div class="flex-1 flex min-h-0">
        <div class="flex flex-1 bg-base-300 rounded-xl overflow-hidden">
            <Code
                lang={"js"}
                code={formattedCode}
                transformers={// @ts-expect-error
                [transformerNotationDiff(), transformerNotationHighlight(), transformerNotationWordHighlight()]}
            />
        </div>
    </div>
</div>
