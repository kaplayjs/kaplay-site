---
import { Code } from "astro:components";

export interface Props {
    tag: string;
    items: any[];
    paramName?: string;
}

const { tag, items, paramName } = Astro.props;

const hiddenTags = ["group"];

const getItem = (items: any[]) => {
    return items.flat?.()[0]?.text ?? items[0] ?? "";
};
---

{
    !hiddenTags.includes(tag) && (
        <>
            {
                tag === "example"
            ? (
                    <Code
                        code={items.join("").replace(/^```js\s+|```$/g, "")}
                        lang="js"
                    />
                )
            : tag === "param"
            ? (
                    <p class="prose gap-2">
                        <code class="mr-1 inline">{tag}</code>
                        <span>{paramName ?? "unknown"}</span>
                        <span>{getItem(items)}</span>
                    </p>
                )
            : tag === "experimental"
            ? (
                    <p class="prose gap-2">
                        <code
                            class="mr-1 inline bg-warning text-warning-content"
                        >
                            {tag}
                        </code>
                        <span>{getItem(items)}</span>
                    </p>
                )
            : (
                    <p class="prose gap-2">
                        <code class="mr-1 inline">{tag}</code>
                        <span>{getItem(items)}</span>
                    </p>
                )
            }
        </>
    )
}
