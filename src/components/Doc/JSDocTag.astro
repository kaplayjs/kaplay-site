---
import { Code } from "astro:components";

export interface Props {
    tag: string;
    items: any[];
    paramName?: string;
}

const { tag, items, paramName } = Astro.props;

const getItem = (items: any[]) => {
    return items.flat?.()[0]?.text ?? items[0] ?? "";
};
---

{
    (
        <Fragment>
            {tag === "example" ? (
                <Code code={items.join("").replace(/^```js\s+|```$/g, "")} lang="js" data-jsdoc-example />
            ) : tag === "param" ? (
                <p class="prose gap-2 items-center" data-jsdoc-tag>
                    <code data-jsdoc-name class="mr-1 inline">
                        {tag}
                    </code>
                    <span data-jsdoc-describe>{(paramName ?? "unknown") + " "}</span>
                    <span data-jsdoc-value>{getItem(items)}</span>
                </p>
            ) : tag === "experimental" ? (
                <p class="prose gap-2" data-jsdoc-tag>
                    <code data-jsdoc-name class="mr-1 inline bg-warning text-warning-content">
                        {tag}
                    </code>
                    <span data-jsdoc-value>{getItem(items)}</span>
                </p>
            ) : (
                <p class="prose gap-2 items-center" data-jsdoc-tag>
                    <code data-jsdoc-name class="mr-1 inline">
                        {tag}
                    </code>
                    <span data-jsdoc-value>{getItem(items)}</span>
                </p>
            )}
        </Fragment>
    )
}
