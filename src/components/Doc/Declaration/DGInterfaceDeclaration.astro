---
import DocEntry from "../DocEntry.astro";
import JSDoc from "../JSDoc.astro";
import TypeBadge from "../Other/TypeBadge.astro";
import Title from "../Utils/Title.astro";
import type { DataMaybeMemberTypeProps } from "../Utils/types.ts";

type TypeDataInterfaceDeclaration = {
    kind: "InterfaceDeclaration";
    id: number;
    name: string;
    members: Record<string, any>;
};

interface Props extends DataMaybeMemberTypeProps {
    data: TypeDataInterfaceDeclaration;
}

const { parent, data, depth } = Astro.props;
---

<TypeBadge depth={depth}>Interface</TypeBadge>
<Title name={data.name} parent={parent} depth={depth} class="inline">:</Title>
<JSDoc data={data} />

{Object.keys(data.members).map((d) => data.members[d].map((rd) => <DocEntry data={rd} depth={depth + 1} parent={data.name} />))}
