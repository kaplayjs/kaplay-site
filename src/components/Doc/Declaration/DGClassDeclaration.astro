---
import DocEntry from "../DocEntry.astro";
import JSDoc from "../JSDoc.astro";
import TypeBadge from "../Other/TypeBadge.astro";
import Title from "../Utils/Title.astro";
import type { DataMaybeMemberTypeProps } from "../Utils/types.ts";

type TypeDataClassDeclaration = {
    kind: "InterfaceDeclaration";
    id: number;
    name: string;
    members: Record<string, any>;
};

interface Props extends DataMaybeMemberTypeProps {
    data: TypeDataClassDeclaration;
}

const { index, data, depth, parent } = Astro.props;
---

<TypeBadge depth={depth}>Class</TypeBadge>
<Title index={index} name={data.name} class="inline" parent={parent} name={data.name} depth={depth} data-dg-class-declaration /><strong data-dg-title="true"
    >:</strong
>

<JSDoc data={data} />

{Object.keys(data.members).map((d) => data.members[d].map((rd) => <DocEntry data={rd} depth={depth + 1} parent={data.name} />))}
