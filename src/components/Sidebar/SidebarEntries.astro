---
import { Image } from "astro:assets";
import VersionSelector from "./VersionSelector.astro";
import SidebarLink from "./SidebarLink.astro";
import SidebarCategoryLink from "./SidebarCategoryLink.astro";
import SidebarList from "./SidebarList.astro";
import type { SidebarEntry, SidebarProps } from "./Sidebar.astro";
import { getBlogEntries, getBookEntries, getDocEntries, getGuidesEntries } from "./entries.ts";
import { assets as news } from "@kaplayjs/crew";

type Props = SidebarProps;

const { sidebarMode } = Astro.props;

let renderList: SidebarEntry[] = [];

if (sidebarMode === "guides") {
    renderList = await getGuidesEntries();
} else if (sidebarMode === "reference") {
    renderList = await getDocEntries();
} else if (sidebarMode === "blog") {
    renderList = await getBlogEntries();
} else if (sidebarMode === "books") {
    renderList = await getBookEntries();
}
---

<div class="drawer-side z-50 h-dvh md:bg-base-300" transition:persist>
    <label for="sidebar" aria-label="close sidebar" class="drawer-overlay"></label>
    <div class="min-h-full w-72 bg-base-300 p-4 text-base-content">
        <figure>
            <a class="btn btn-ghost h-max w-full p-2" href={"/"} data-astro-reload>
                <Image src="/kaplay.gif" alt="kaplay logo" class="aspect-auto h-24 w-52 object-contain" width={208} height={100} loading={"eager"} />
            </a>
        </figure>

        <div class="flex items-center justify-center">
            <VersionSelector />
            <a class="btn btn-sm" href="https://github.com/kaplayjs/kaplay/blob/master/CHANGELOG.md" target="_blank">
                <img src={news.paper.outlined} class="w-6 h-6" />
            </a>
        </div>

        <div class="divider"></div>

        <ul class="flex-col gap-2 bg-neutral p-1 rounded-xl border border-base-100 mb-4">
            <SidebarCategoryLink href="/guides" icon="marks_legend" selected={sidebarMode === "guides"}> Guides </SidebarCategoryLink>
            <SidebarCategoryLink href="/doc/kaplay" icon="api_book" selected={sidebarMode === "reference"}> API Reference </SidebarCategoryLink>
            <SidebarCategoryLink href="/blog" icon="paper" selected={sidebarMode === "blog"}> Blog </SidebarCategoryLink>
        </ul>

        <SidebarList sidebarMode={sidebarMode} sidebarEntries={renderList} />
    </div>
</div>
